name: CI/CD for mhc-api

on:
  push:
    branches: [main]
  pull_request:
    branches: ['**']

jobs:
  dev-pr-check:
    name: Build & Test (Dev PR Check)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: development

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm install -g pnpm
        name: Install PNPM

      - run: pnpm install
        name: Install dependencies

      - run: pnpm nx lint mhc-api
        name: Lint

      - run: pnpm nx test mhc-api
        name: Test

      - name: Build all dependencies
        run: pnpm nx run-many --target=build --all --configuration=production

  prod-deploy:
    name: Deploy to Production
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm install -g pnpm
        name: Install PNPM

      - run: pnpm install
        name: Install dependencies

      - run: pnpm nx lint mhc-api
        name: Lint

      - run: pnpm nx run-many --target=build --all --configuration=production
        name: Build all dependencies

      - name: Authenticate to Google Cloud
        run: |
          cat <<EOF > ${HOME}/gcloud.json
          ${{ secrets.GCP_SA_KEY }}
          EOF
          gcloud auth activate-service-account --key-file=${HOME}/gcloud.json
          gcloud config set project ${{ secrets.GCP_PROJECT }}
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Docker Build
        run: |
          docker build \
            -t ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/mhc-api/mhc-api:latest \
            -f apps/mhc-api/Dockerfile .

      - name: Docker Push
        run: |
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/mhc-api/mhc-api:latest

      - name: Deploy to VM via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.GCE_VM_IP }}
          username: ${{ secrets.GCE_VM_USER }}
          key: ${{ secrets.GCE_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -xe
            gcloud config set project ${{ secrets.GCP_PROJECT }}
            gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

            docker pull ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/mhc-api/mhc-api:latest

            docker stop mhc-api   || true
            docker rm   mhc-api   || true

            docker run -d \
              --name mhc-api \
              -p 3000:3000 \
              -e GOOGLE_CLOUD_PROJECT=${{ secrets.GOOGLE_CLOUD_PROJECT }} \
              -e GOOGLE_CLOUD_DB=${{ secrets.GOOGLE_CLOUD_DB }} \
              -e FIREBASE_STORAGE_PRIVATE_BUCKET=${{ secrets.FIREBASE_STORAGE_PRIVATE_BUCKET }} \
              -e FIREBASE_STORAGE_PUBLIC_BUCKET=${{ secrets.FIREBASE_STORAGE_PUBLIC_BUCKET }} \
              -e SESSION_SECRET=${{ secrets.SESSION_SECRET }}
              ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/mhc-api/mhc-api:latest
